// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {

    IN  in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Input is connected to all registers. We
    // use dmux to choose which one will load (if needed)
    DMux8Way(in=load, a=load0, b=load1, c=load2, d=load3,
                      e=load4, f=load5, g=load6, h=load7, sel=address);
        
    Register(in=in, out=out0, load=load0);
    Register(in=in, out=out1, load=load1);    
    Register(in=in, out=out2, load=load2);
    Register(in=in, out=out3, load=load3);
    Register(in=in, out=out4, load=load4);
    Register(in=in, out=out5, load=load5);
    Register(in=in, out=out6, load=load6);
    Register(in=in, out=out7, load=load7);
    
    // Send the correct output
    Mux8Way16(a=out0, b=out1, c=out2, d=out3,
              e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}
